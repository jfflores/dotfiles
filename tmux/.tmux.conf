set-option -g default-terminal "tmux-256color"
set-option -ga terminal-overrides ',xterm-256color:Tc'

set-option -g set-titles on
set-option -g set-titles-string "#{session_name}"

# Mouse works as expected
set-option -g mouse on

# Stay in copy mode on drag end.
# (Would use `bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X
# stop-selection` but it is a bit glitchy.)
# unbind-key -T copy-mode-vi MouseDragEnd1Pane

# Make double and triple click work outside of copy mode (already works inside it with default bindings).
# bind-key -T root DoubleClick1Pane if-shell -Ft'{mouse}' '#{alternate_on}' "send-keys -M" "copy-mode -t'{mouse}'; send-keys -t'{mouse}' -X select-word"
# bind-key -T root TripleClick1Pane if-shell -Ft'{mouse}' '#{alternate_on}' "send-keys -M" "copy-mode -t'{mouse}'; send-keys -t'{mouse}' -X select-line"

# Don't exit copy mode on double or triple click.
# bind-key -T copy-mode-vi DoubleClick1Pane if-shell -Ft'{mouse}' '#{alternate_on}' "send-keys -M" "copy-mode -t'{mouse}'; send-keys -t'{mouse}' -X select-word"
# bind-key -T copy-mode-vi TripleClick1Pane if-shell -Ft'{mouse}' '#{alternate_on}' "send-keys -M" "copy-mode -t'{mouse}'; send-keys -t'{mouse}' -X select-line"

# Highlight active window.
# set -w -g window-status-current-bg red
set -g window-active-style 'fg=colour250,bg=default'

# Make widths constant with or without flags.
set-option -w -g window-status-current-format ' #I:#W#F '
set-option -w -g window-status-format ' #I:#W#{?#{==:#F,},  ,#F }'

set-option -w -g xterm-keys on

# Dynamically update iTerm tab and window titles.
set-option -g set-titles on


# show bells in window titles.
set-option -g window-status-bell-style fg=yellow,bold,underscore

# Turn off distracting border highlight.
set-option -ga pane-active-border-style bg=default,fg=default

# Clipper.
bind-key y run-shell "tmux save-buffer - | clip"

# Status bar.
set-option -g status-style 'bg=#373b41,fg=white,bold,italics'
set-option -g status-left-length 40
set-option -g status-left '#[fg=yellow,bold,italics]#S ยง ' # SECTION SIGN (UTF-8: c2 a7)
set-option -g status-right "#[fg=yellow,bold,italics]$USER@#h #[fg=magenta]%l:%M %p"
set-option -g status-interval 60 # Default is 15.

# Needed as on tmux 1.9 and up (defaults to off).
# Added in tmux commit c7a121cfc0137c907b7bfb.
set-option -g focus-events on

# Open new/split panes with the path of the current pane.
unbind-key c
bind-key c new-window -c '#{pane_current_path}'
unbind-key %
bind-key % split-window -h -c '#{pane_current_path}'
unbind-key '"'
bind-key '"' split-window -v -c '#{pane_current_path}'

# Vim-like key bindings for pane navigation (default uses cursor keys).
unbind-key h
bind-key h select-pane -L
unbind-key j
bind-key j select-pane -D
unbind-key k
bind-key k select-pane -U
unbind-key l # normally used for last-window
bind-key l select-pane -R
# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
# is_vim="ps -o state= -o comm= -t '#{pane_tty}' | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
# bind-key -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
# bind-key -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
# bind-key -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
# bind-key -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
# # bind-key -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"


# bind-key -T copy-mode-vi C-h select-pane -L
# bind-key -T copy-mode-vi C-j select-pane -D
# bind-key -T copy-mode-vi C-k select-pane -U
# bind-key -T copy-mode-vi C-l select-pane -R
# bind-key -T copy-mode-vi C-\ select-pane -l

bind-key v split-window -h
bind-key s split-window -v

# prefix + e prefix - faz resize do split horizontal
# prefix < e prefix > faz resize do split vertical
# src: https://codeburst.io/common-way-of-resizing-windows-panes-in-vim-and-tmux-9b88def886c6
bind-key -r '+' resize-pane -U 10
bind-key -r '-' resize-pane -D 10
bind-key -r '<' resize-pane -L 10
bind-key -r '>' resize-pane -R 10

# Intuitive window-splitting keys.
bind-key | split-window -h -c '#{pane_current_path}' # normally prefix-%
bind-key '\' split-window -h -c '#{pane_current_path}' # normally prefix-%
bind-key - split-window -v -c '#{pane_current_path}' # normally prefix-"

# Slightly more useful width in "main-vertical" layout; enough room for 3-digit
# line number gutter in Vim + 80 columns of text + 1 column breathing room
# (default looks to be about 79).
set-option -w -g main-pane-width 85

# No delay for escape key press
set -sg escape-time 0

# titulo do pane
set -g pane-border-format "#{pane_index}#{?@custom_pane_title,:#{@custom_pane_title},}:#{pane_title}"
set -g pane-border-status top

# Reload tmux config
bind r source-file ~/.tmux.conf

